<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>TEI Publisher Default Custom ODD</title>
            </titleStmt>
            <publicationStmt>
                <p>Default customization used by TEI Publisher. Extends tei_simplePrint.odd  
                </p>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec ident="myteisimple" start="TEI teiCorpus" source="teipublisher.odd">
                <elementSpec mode="change" ident="div">
                    <model predicate="@type='title_page'" behaviour="block">
                        <outputRendition>border: 1px solid black; padding: 5px;</outputRendition>
                    </model>
                    <model behaviour="section" predicate="parent::body or parent::front or parent::back"/>
                    <model behaviour="block" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec mode="change" ident="p">
                    <model behaviour="paragraph" useSourceRendition="true">
                        <outputRendition>text-align: left;</outputRendition>
                    </model>
                </elementSpec>
                <elementSpec mode="change" ident="head">
                    <model predicate="$parameters?header='short'" behaviour="inline">
                        <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
                    </model>
                    <model predicate="parent::figure" behaviour="block">
                        <outputRendition>font-style: italic;</outputRendition>
                    </model>
                    <model predicate="parent::table" behaviour="block">
                        <outputRendition>font-style: italic;</outputRendition>
                    </model>
                    <model predicate="parent::lg" behaviour="block">
                        <outputRendition>font-style: italic;</outputRendition>
                    </model>
                    <model predicate="parent::list" behaviour="block">
                        <outputRendition>font-weight: bold;</outputRendition>
                    </model>
                    <model predicate="not(parent::div/ancestor::div)" behaviour="heading">
                        <outputRendition> color: #983722; border-bottom: 1px solid #983722;
                            margin-bottom: .5em; padding-bottom: .25em; </outputRendition>
                    </model>
                    <model predicate="parent::div" behaviour="heading"/>
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec mode="change" ident="add">
                    <model behaviour="block">
                        <outputRendition>color: red; text-decoration: underline;</outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="name" mode="change">
                    <attList>
                        <attDef ident="type" mode="change">
                            <valList mode="replace" type="closed">
                                <valItem ident="person"/>
                                <valItem ident="forename"/>
                                <valItem ident="surname"/>
                                <valItem ident="organisation"/>
                                <valItem ident="object"/>
                                <valItem ident="country"/>
                                <valItem ident="place"/>
                            </valList>
                        </attDef>
                    </attList>
                    <model behaviour="block">
                        <outputRendition>color: blue;</outputRendition>
                    </model>
                </elementSpec>
                <elementSpec mode="change" ident="choice">
                    <constraintSpec ident="choiceSize" scheme="isoschematron" mode="add">
                        <constraint>
                            <assert xmlns="http://purl.oclc.org/dsdl/schematron" test="count(*) &gt; 1" role="ERROR"> Element "<sch:name xmlns:sch="http://purl.oclc.org/dsdl/schematron"/>" must have at
                                least two child elements.</assert>
                        </constraint>
                    </constraintSpec>
                    <constraintSpec ident="choiceContent" scheme="isoschematron" mode="add">
                        <constraint>
                            <assert xmlns="http://purl.oclc.org/dsdl/schematron" test="(tei:corr or tei:sic or tei:expan or     tei:abbr or tei:reg or tei:orig) and ((tei:corr and tei:sic) or (tei:expan     and tei:abbr) or (tei:reg and tei:orig))" role="ERROR"> Element "<sch:name xmlns:sch="http://purl.oclc.org/dsdl/schematron"/>" must have
                                corresponding corr/sic, expand/abbr, reg/orig </assert>
                        </constraint>
                    </constraintSpec>
                    <model output="plain" predicate="sic and corr" behaviour="inline">
                        <param name="content" value="corr[1]"/>
                    </model>
                    <model output="plain" predicate="abbr and expan" behaviour="inline">
                        <param name="content" value="expan[1]"/>
                    </model>
                    <model output="plain" predicate="orig and reg" behaviour="inline">
                        <param name="content" value="reg[1]"/>
                    </model>
                    <model predicate="sic and corr" behaviour="alternate">
                        <param name="default" value="corr[1]"/>
                        <param name="alternate" value="sic[1]"/>
                    </model>
                    <model predicate="abbr and expan" behaviour="alternate">
                        <param name="default" value="expan[1]"/>
                        <param name="alternate" value="abbr[1]"/>
                    </model>
                    <model predicate="orig and reg" behaviour="alternate">
                        <param name="default" value="reg[1]"/>
                        <param name="alternate" value="orig[1]"/>
                    </model>
                    <model predicate="unclear" behaviour="alternate">
                        <param name="default" value="if (unclear[@cert='high']) then unclear[@cert='high']
                            else unclear[1]"/>
                        <param name="alternate" value="unclear[@cert!='high']"/>
                    </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>