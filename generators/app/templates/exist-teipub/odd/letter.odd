<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Custom ODD for a letter</title>
            </titleStmt>
            <publicationStmt>
                <p>Default customization used by TEI Publisher. Extends tei_simplePrint.odd  
                </p>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" source="teipublisher.odd" ident="letter">
                <elementSpec mode="change" ident="pb">
                    <desc>Hide page breaks</desc>
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec mode="change" ident="dateline">
                    <model behaviour="block">
                        <outputRendition>text-align: right; margin-bottom: 1em;</outputRendition>
                    </model>
                </elementSpec>
                <elementSpec mode="change" ident="name">
                    <modelSequence predicate="@type='person' and @ref">
                        <desc>Output additional info on the person as footnote</desc>
                        <model behaviour="inline" cssClass="person">
                            <outputRendition>text-decoration: underline;</outputRendition>
                        </model>
                        <model behaviour="note">
                            <param name="label" value="count(preceding::name[@ref][@type='person'][ancestor::body]) + 1"/>
                            <param name="content" value="id(substring-after(./@ref, '#') )"/>
                        </model>
                    </modelSequence>
                    <model predicate="@type='place'" behaviour="link">
                        <desc>Transform geographical coordinates into a google maps link</desc>
                        <param name="link" value="                             let $ref := substring-after(./@ref, '#')                              return                                  'http://maps.google.com/maps?q=' || translate(root(.)/id($ref)/location/geo, ' ', ',')"/>
                        <outputRendition>font-weight: bold;</outputRendition>
                    </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec mode="change" ident="note">
                    <desc>Ignore notes appearing in person or we get a footnote in a footnote</desc>
                    <model predicate="ancestor::person" behaviour="inline"/>
                    <model behaviour="note">
                        <param name="place" value="@place"/>
                    </model>
                </elementSpec>
                <elementSpec mode="add" ident="person">
                    <model behaviour="inline">
                        <param name="content" value="(persName, occupation, note)"/>
                    </model>
                </elementSpec>
                <elementSpec mode="add" ident="persName">
                   <model behaviour="inline">
                        <param name="content" value="string-join((text(), forename, surname[not(@type)]), ' ')"/>
                        <outputRendition scope="after">
                            content: ': ';
                        </outputRendition>
                    </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>